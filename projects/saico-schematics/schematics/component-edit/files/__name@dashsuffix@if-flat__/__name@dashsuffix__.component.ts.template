import {Component<% if(!!viewEncapsulation) { %>, ViewEncapsulation<% }%><% if(changeDetection !== 'Default') { %>, ChangeDetectionStrategy<% }%>} from '@angular/core';
import {ActivatedRoute, Router} from '@angular/router';
import {animations, IComponentUpdate} from '@app/nodachi';
import {<%= classify(name) %>Service} from '@app/nodachi/common-services';
import {<%= classify(name) %>} from '../<%= dasherize(name) %>';

@Component({
  selector: '<%= selector %>',<% if(inlineTemplate) { %>
  template: `
    <p>
      <%= dasherize(name) %> works!
    </p>
  `,<% } else { %>
  templateUrl: './<%= dashsuffix(name) %>.component.html',
  animations: animations,<% } if(inlineStyle) { %>
  styles: []<% } else { %>
  styleUrls: ['./<%= dashsuffix(name) %>.component.<%= style %>']<% } %><% if(!!viewEncapsulation) { %>,
  encapsulation: ViewEncapsulation.<%= viewEncapsulation %><% } if (changeDetection !== 'Default') { %>,
  changeDetection: ChangeDetectionStrategy.<%= changeDetection %><% } %>
})
export class <%= classsuffix(name) %>Component extends IComponentUpdate<<%= classify(name) %>> {

  constructor(public <%= camelize(name) %>Service: <%= classify(name) %>Service,
                public router: Router,
                public route: ActivatedRoute) {
      super(<%= camelize(name) %>Service, route, router, 'Modificar <%= capitalize(name) %>', new <%= classify(name) %>());
    }

}
